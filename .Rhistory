id.counts <- table(intake.data$StudentID)
count.proportions <- list()
for( i in 1:max(id.counts)) {
count.proportions[[i]] <- length(id.counts[which(id.counts==i)])/length(id.counts)
}
count.proportions
count.proportions %>% unlist()
likelyToReturn <- cbind(counts,count.proportions) %>% as.data.frame()
id.counts <- table(intake.data$StudentID)
count.proportions <- list()
counts <- 1:max(id.counts)
for( i in counts) {
count.proportions[[i]] <- length(id.counts[which(id.counts==i)])/length(id.counts)
}
likelyToReturn <- cbind(counts,count.proportions) %>% as.data.frame()
plot(likelyToReturn)
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn)
require(ggplot2)
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn) + geom_bar()
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn) + geom_line()
x
counts
count.proportions
View(likelyToReturn)
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn)
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn) + geom_line()
likelyToReturn
plot(count.proportions)
plot(counts,count.proportions)
plot(counts,count.proportions,type="h")
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn)
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn) + geom_line()
order(likelyToReturn)
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn %>% as.data.frame()) + geom_line()
ls()
ggplot(aes(x=dateAsInt,y=cumsum),data=daily.time.series) + geom_line()
ggplot(aes(x=dateAsInt,y=cumsum),data=daily.time.series) + geom_line()
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn) + geom_line()
likelyToReturn <- cbind(counts,count.proportions %>% unlist()) %>% as.data.frame()
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn) + geom_line()
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn) + geom_line()
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn) + geom_line()
names(likelyToReturn) <- c("counts","count.proportions")
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn) + geom_line()
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn) + geom_bar()
names(id.counts)
count.proportions
ggplot(aes(x=counts,y=count.proportions),data=likelyToReturn) + geom_bar(stat="identity")
freq.table
freq.table %>% names()
freq.table %>% unlist()
freq.table
freq.table %>% unlist()
freq.table %>% unlist() %>% unlist()
freq.table[[1]]
freq.table[1:10]
freq.table[1:10][[1]]
as.vector(freq.table)
norm.values <- as.vector(freq.table)
norm <- cbind(norm.times,norm.values) %>% as.data.frame()
norm.times <- names(freq.table)
norm.values <- as.vector(freq.table)
norm <- cbind(norm.times,norm.values) %>% as.data.frame()
dim(norm)
ggplot(aes(x=norm.times,y=norm.values),data=norm) + geom_bar()
norm.values
ggplot(aes(x=norm.times,y=norm.values),data=norm) + geom_bar(stat="identity")
norm.times
norm.times %>% substr(1,5)
norm.times <- names(freq.table)
norm.values <- as.vector(freq.table) %>% substr(1,5)
norm <- cbind(norm.times,norm.values) %>% as.data.frame()
ggplot(aes(x=norm.times,y=norm.values),data=norm) + geom_bar(stat="identity")
norm.times <- names(freq.table) %>% substr(1,5)
norm.values <- as.vector(freq.table)
norm <- cbind(norm.times,norm.values) %>% as.data.frame()
ggplot(aes(x=norm.times,y=norm.values),data=norm) + geom_bar(stat="identity")
rel.props <- list()
for (i in 1:(length(count.proportions))-1){
rel.props[[i]] <- count.proportions[[i]]/count.proportions[[i]]
}
1:(length(count.proportions))-1
1:(length(count.proportions)-1)
for (i in 1:(length(count.proportions)-1)){
rel.props[[i]] <- count.proportions[[i]]/count.proportions[[i]]
}
ggplot(aes(x=rel.counts,y=rel.props),data=rel)
View(rel)
rel.props <- list()
for (i in 1:(length(count.proportions)-1)){
rel.props[[i]] <- count.proportions[[i]]/count.proportions[[i]]
}
rel.counts <- 1:(length(count.proportions)-1)
rel <- cbind(rel.counts,rel.props) %>% as.data.frame()
ggplot(aes(x=rel.counts,y=rel.props),data=rel) + geom_bar(stat="identity")
View(rel)
for (i in 1:(length(count.proportions)-1)){
if (count.proportions[[i]] == 0) {
rel.props[[i]] <- 0
} else {
rel.props[[i]] <- count.proportions[[i]]/count.proportions[[i]]
}
}
rel.counts <- 1:(length(count.proportions)-1)
rel <- cbind(rel.counts,rel.props) %>% as.data.frame()
ggplot(aes(x=rel.counts,y=rel.props),data=rel) + geom_bar(stat="identity")
1/2
1 %>% as.integer()/2
1 %>% as.integer()/(2 %>% as.integer)
1 %>% as.integer()/(2 %>% as.integer())
rel.props <- list()
for (i in 1:(length(count.proportions)-1)){
if (count.proportions[[i]] == 0) {
rel.props[[i]] <- 0
} else {
rel.props[[i]] <- count.proportions[[i+1]]/as.numeric(count.proportions[[i]])
}
}
rel.counts <- 1:(length(count.proportions)-1)
rel <- cbind(rel.counts,rel.props) %>% as.data.frame()
ggplot(aes(x=rel.counts,y=rel.props),data=rel) + geom_bar(stat="identity")
View(rel)
id.counts <- table(intake.data$StudentID)
count.proportions <- list()
counts <- 1:max(id.counts)
for( i in counts) {
count.proportions[[i]] <- length(id.counts[which(id.counts==i)])/length(id.counts)
}
apptFreq <- cbind(counts,count.proportions %>% unlist()) %>% as.data.frame()
names(apptFreq) <- c("counts","count.proportions")
ggplot(aes(x=counts,y=count.proportions),data=apptFreq) + geom_bar(stat="identity")
rel.props <- list()
for (i in 1:(length(count.proportions)-1)){
if (count.proportions[[i]] == 0) {
rel.props[[i]] <- 0
} else {
rel.props[[i]] <- count.proportions[[i+1]]/as.numeric(count.proportions[[i]])
}
}
rel.props <- rel.props %>% unlist()
rel.counts <- 1:(length(count.proportions)-1)
rel <- cbind(rel.counts,rel.props) %>% as.data.frame()
names(rel) <- c("rel.counts","rel.props")
ggplot(aes(x=rel.counts,y=rel.props),data=rel) + geom_bar(stat="identity")
rel.counts
count.proportions
apptFreq
for( i in counts) {
population[[i]] <- length(id.counts[which(id.counts==i)])
count.proportions[[i]] <- length(id.counts[which(id.counts==i)])/length(id.counts)
}
population <- list()
for( i in counts) {
population[[i]] <- length(id.counts[which(id.counts==i)])
count.proportions[[i]] <- length(id.counts[which(id.counts==i)])/length(id.counts)
}
population
population %>% unlist()
ggplot(aes(x=rel.counts,y=rel.props),data=rel) + geom_bar(stat="identity")
ggplot(aes(x=rel.counts,y=rel.props),data=rel[1:5,]) + geom_bar(stat="identity")
population > 10
which(population > 10)
which(population > 10) %>% max()
cutoff <-  which(population > 10) %>% max()
ggplot(aes(x=rel.counts,y=rel.props),data=rel[1:cutoff,]) + geom_bar(stat="identity")
require(googlesheets)
require(magrittr)
require(ggplot2)
require(gridExtra)
intake.form.sheetID <- '1eUxxEVagFv4nTGI4MMCFWXUiuIT2deUCs6-q__r19ko'
first.valid.date <- strptime("2016-08-26",format="%Y-%m-%d") %>% as.POSIXct() %>% as.integer()
gs.data.object <- gs_key(intake.form.sheetID)
gs_ls()
gs_oauth(reset=TRUE)
?googlesheets
gs_auth(reset=TRUE)
? gs_auth
gs_auth(new_user = =TRUE)
gs_auth(new_user=TRUE)
require(googlesheets)
require(magrittr)
require(ggplot2)
require(gridExtra)
intake.form.sheetID <- '1eUxxEVagFv4nTGI4MMCFWXUiuIT2deUCs6-q__r19ko'
first.valid.date <- strptime("2016-08-26",format="%Y-%m-%d") %>% as.POSIXct() %>% as.integer()
gs.data.object <- gs_key(intake.form.sheetID)
intake.data <- gs.data.object %>% gs_read(ws=1)
gs_ls()
gs.data.object <- gs_key(intake.form.sheetID)
require(googlesheets)
require(magrittr)
require(ggplot2)
require(gridExtra)
intake.form.sheetID <- '1eUxxEVagFv4nTGI4MMCFWXUiuIT2deUCs6-q__r19ko'
first.valid.date <- strptime("2016-08-26",format="%Y-%m-%d") %>% as.POSIXct() %>% as.integer()
gs.data.object <- gs_key(intake.form.sheetID)
intake.data <- gs.data.object %>% gs_read(ws=1)
daily.counts <- table(times)
semester.days <- seq(as.Date("2016-8-1"), as.Date("2016-12-31"), by="days") %>% as.character()
sel <- semester.days %in% (times %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
rm(list=ls())
require(googlesheets)
require(magrittr)
require(ggplot2)
require(gridExtra)
intake.form.sheetID <- '1eUxxEVagFv4nTGI4MMCFWXUiuIT2deUCs6-q__r19ko'
first.valid.date <- strptime("2016-08-26",format="%Y-%m-%d") %>% as.POSIXct() %>% as.integer()
gs.data.object <- gs_key(intake.form.sheetID)
intake.data <- gs.data.object %>% gs_read(ws=1)
daily.counts <- table(times)
times <- unique(intake.data$Time)
daily.counts <- table(times)
require(googlesheets)
require(magrittr)
require(ggplot2)
require(gridExtra)
intake.form.sheetID <- '1eUxxEVagFv4nTGI4MMCFWXUiuIT2deUCs6-q__r19ko'
first.valid.date <- strptime("2016-08-26",format="%Y-%m-%d") %>% as.POSIXct() %>% as.integer()
gs.data.object <- gs_key(intake.form.sheetID)
intake.data <- gs.data.object %>% gs_read(ws=1)
times <- unique(intake.data$Time)
daily.counts <- table(times)
semester.days <- seq(as.Date("2016-8-1"), as.Date("2016-12-31"), by="days") %>% as.character()
sel <- semester.days %in% (times %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
daily.time.series[,1]
times <- unique(intake.data$Time)
daily.counts <- table(times)
semester.days <- seq(as.Date("2016/8/1"), as.Date("2016/12/31"), by="days") %>% as.character()
sel <- semester.days %in% (times %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
daily.time.series[1,1]
daily.time.series[,1
]
View(daily.time.series)
times <- intake.data$Time
daily.counts <- table(times)
semester.days <- seq(as.Date("2016/8/1"), as.Date("2016/12/31"), by="days") %>% as.character()
sel <- semester.days %in% (times %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
dates
rm(dates)
times <- intake.data$Time
daily.counts <- table(times)
dates <- daily.counts %>% names()
dates
intake.data$Time
intake.data$Time %>% table()
intake.data$Time %>% as.character() %>% table()
times <- intake.data$Time
daily.counts <- table(times %>% as.character())
semester.days <- seq(as.Date("2016/8/1"), as.Date("2016/12/31"), by="days") %>% as.character()
sel <- semester.days %in% (times %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
times
daily.counts
times <- intake.data$Date
times <- intake.data$Date
daily.counts <- table(times %>% as.character())
semester.days <- seq(as.Date("2016/8/1"), as.Date("2016/12/31"), by="days") %>% as.character()
sel <- semester.days %in% (times %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
dates
times <- intake.data$Date
daily.counts <- table(times %>% as.character())
semester.days <- seq(as.Date("2016-8-1"), as.Date("2016-12-31"), by="days") %>% as.character()
sel <- semester.days %in% (times %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
times
rm(rimes)
rm(times)
dates <- intake.data$Date
daily.counts <- table(dates %>% as.character())
semester.days <- seq(as.Date("2016-8-1"), as.Date("2016-12-31"), by="days") %>% as.character()
sel <- semester.days %in% (dates %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
dates
dates <- intake.data$Date
daily.counts <- table(dates %>% as.character())
semester.days <- seq(as.Date("8/1/2016"), as.Date("12/31/2017"), by="days") %>% as.character()
dates <- intake.data$Date
daily.counts <- table(dates %>% as.character())
semester.days <- seq(as.Date("08/01/2016"), as.Date("12/31/2017"), by="days") %>% as.character()
dates <- intake.data$Date
daily.counts <- table(dates %>% as.character())
semester.days <- seq(as.Date("2016-8-1"), as.Date("2016-12-31"), by="days") %>% as.character()
sel <- semester.days %in% (dates %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
semester.days
dates
dates.tmp <- intake.data %>% strptime("%m/%d/%Y")
dates.tmp
dates.tmp <- intake.data$Date %>% strptime("%m/%d/%Y")
dates.tmp
dates.tmp %>% as.character()
intake.data$Date  <- intake.data$Date %>% strptime("%m/%d/%Y") %>% as.character()
daily.counts <- table(dates %>% as.character())
semester.days <- seq(as.Date("2016-8-1"), as.Date("2016-12-31"), by="days") %>% as.character()
sel <- semester.days %in% (dates %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
daily.tim.series
daily.time.series
intake.data$Date  <- intake.data$Date %>% strptime("%m/%d/%Y") %>% as.character()
daily.counts <- table(dates %>% as.character())
semester.days <- seq(as.Date("2016-8-1"), as.Date("2016-12-31"), by="days") %>% as.character()
sel <- semester.days %in% (dates %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
intake.data$Date  <- intake.data$Date %>% strptime("%m/%d/%Y") %>% as.character()
dates <- intake.data$Date
daily.counts <- table(dates %>% as.character())
semester.days <- seq(as.Date("2016-8-1"), as.Date("2016-12-31"), by="days") %>% as.character()
sel <- semester.days %in% (dates %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
daily.time.series$values <- daily.time.series$values %>% as.integer()
daily.time.series <- daily.time.series[order(daily.time.series$dates),]
daily.time.series$dateAsInt <- daily.time.series[,"dates"] %>% as.integer()
daily.time.series$dateAsInt <- daily.time.series$dateAsInt - min(daily.time.series$dateAsInt)
daily.time.series$cumsum <- daily.time.series$values %>% cumsum()
ggplot(aes(x=dateAsInt,y=cumsum),data=daily.time.series) + geom_line()
View(daily.time.series)
date
dates
daily.counts
dates
intake.data$Date
intake.data <- gs.data.object %>% gs_read(ws=1)
dates  <- intake.data$Date %>% strptime("%m/%d/%Y") %>% as.character()
dates
dates  <- intake.data$Date %>% strptime("%m/%d/%Y") %>% as.character()
daily.counts <- table(dates %>% as.character())
semester.days <- seq(as.Date("2016-8-1"), as.Date("2016-12-31"), by="days") %>% as.character()
sel <- semester.days %in% (dates %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
daily.time.series$values <- daily.time.series$values %>% as.integer()
daily.time.series <- daily.time.series[order(daily.time.series$dates),]
daily.time.series$dateAsInt <- daily.time.series[,"dates"] %>% as.integer()
daily.time.series$dateAsInt <- daily.time.series$dateAsInt - min(daily.time.series$dateAsInt)
daily.time.series$cumsum <- daily.time.series$values %>% cumsum()
ggplot(aes(x=dateAsInt,y=cumsum),data=daily.time.series) + geom_line()
dates <- dates[which(dates > as.Date("2013-01-01"))]
dates  <- intake.data$Date %>% strptime("%m/%d/%Y") %>% as.character()
dates <- dates[which(dates > as.Date("2013-01-01"))]
daily.counts <- table(dates %>% as.character())
semester.days <- seq(as.Date("2016-8-1"), as.Date("2016-12-31"), by="days") %>% as.character()
sel <- semester.days %in% (dates %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
daily.time.series$values <- daily.time.series$values %>% as.integer()
daily.time.series <- daily.time.series[order(daily.time.series$dates),]
daily.time.series$dateAsInt <- daily.time.series[,"dates"] %>% as.integer()
daily.time.series$dateAsInt <- daily.time.series$dateAsInt - min(daily.time.series$dateAsInt)
daily.time.series$cumsum <- daily.time.series$values %>% cumsum()
ggplot(aes(x=dateAsInt,y=cumsum),data=daily.time.series) + geom_line()
dates  <- intake.data$Date %>% strptime("%m/%d/%Y") %>% as.character()
dates <- dates[which(dates > as.Date("2016-01-01"))]
daily.counts <- table(dates %>% as.character())
semester.days <- seq(as.Date("2016-8-1"), as.Date("2016-12-31"), by="days") %>% as.character()
sel <- semester.days %in% (dates %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
daily.time.series$values <- daily.time.series$values %>% as.integer()
daily.time.series <- daily.time.series[order(daily.time.series$dates),]
daily.time.series$dateAsInt <- daily.time.series[,"dates"] %>% as.integer()
daily.time.series$dateAsInt <- daily.time.series$dateAsInt - min(daily.time.series$dateAsInt)
daily.time.series$cumsum <- daily.time.series$values %>% cumsum()
ggplot(aes(x=dateAsInt,y=cumsum),data=daily.time.series) + geom_line()
dates  <- intake.data$Date %>% strptime("%m/%d/%Y") %>% as.character()
dates <- dates[which(dates > as.Date("2016-01-01"))]
daily.counts <- table(dates %>% as.character())
semester.days <- seq(as.Date("2016-8-1"), as.Date("2017-12-31"), by="days") %>% as.character()
sel <- semester.days %in% (dates %>% as.character())
for (zeroDay in semester.days[!sel]) {
daily.counts[zeroDay] <- 0
}
#sortsel
dates <- daily.counts %>% names()
values <- daily.counts %>% as.integer()
daily.time.series <- cbind(dates,values) %>% as.data.frame()
daily.time.series[,1] <- daily.time.series[,1] %>% as.Date()
daily.time.series$values <- daily.time.series$values %>% as.integer()
daily.time.series <- daily.time.series[order(daily.time.series$dates),]
daily.time.series$dateAsInt <- daily.time.series[,"dates"] %>% as.integer()
daily.time.series$dateAsInt <- daily.time.series$dateAsInt - min(daily.time.series$dateAsInt)
daily.time.series$cumsum <- daily.time.series$values %>% cumsum()
ggplot(aes(x=dateAsInt,y=cumsum),data=daily.time.series) + geom_line()
gs_ls()
gs_ls()$sheet_key
list.files()
getwd()
cd("C:/Users/Hume Dickie/Desktop/Github/Speaking_Center")
setwd("C:/Users/Hume Dickie/Desktop/Github/Speaking_Center")
list.files(all.files=TRUE)
gs_user()
require(googlesheets)
gs_auth(token = "googlesheets_token.rds")
gd_token()
require(googlesheets)
token <- gs_auth(cache = FALSE)
gd_token()
saveRDS(token, file = "googlesheets_token.rds")
gs_auth(token = "googlesheets_token.rds")
require(magrittr)
require(ggplot2)
require(gridExtra)
intake.form.sheetID <- '1eUxxEVagFv4nTGI4MMCFWXUiuIT2deUCs6-q__r19ko'
first.valid.date <- strptime("2016-08-26",format="%Y-%m-%d") %>% as.POSIXct() %>% as.integer()
gs.data.object <- gs_key(intake.form.sheetID)
intake.data <- gs.data.object %>% gs_read(ws=1)
